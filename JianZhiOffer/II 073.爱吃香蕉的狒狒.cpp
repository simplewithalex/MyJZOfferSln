#include "header.h"

/*

LCR 073. 爱吃香蕉的狒狒

珂珂喜欢吃香蕉，这里有 n 堆香蕉，第 i 堆中有 piles[i] 根香蕉。警卫已经离开了，将在 h 小时后回来
珂珂可以决定她吃香蕉的速度 k（单位：根/小时）。每个小时，她将会选择一堆香蕉，从中吃掉 k 根。如果这堆香蕉少于 k 根，她将吃掉这堆的所有香蕉，然后这一小时内不会再吃更多的香蕉
珂珂喜欢慢慢吃，但仍然想在警卫回来前吃掉所有的香蕉

返回她可以在 h 小时内吃掉所有香蕉的最小速度 k（k 为整数）

示例 1：
输入：piles = [3,6,7,11], h = 8
输出：4

示例 2：
输入：piles = [30,11,23,4,20], h = 5
输出：30

示例 3：
输入：piles = [30,11,23,4,20], h = 6
输出：23

提示：
1 <= piles.length <= 10^4
piles.length <= h <= 10^9
1 <= piles[i] <= 10^9

注意：本题与主站 875 题相同： https://leetcode-cn.com/problems/koko-eating-bananas/


*/

class Solution {
public:
	int minEatingSpeed(vector<int> &piles, int h) {
		int lo = 1, hi = *max_element(piles.begin(), piles.end());
		while (lo < hi) {
			int mi = lo + (hi - lo) / 2;
			getSum(piles, mi) > h ? lo = mi + 1 : hi = mi;
		}
		return lo;
	}

private:
	int getSum(const vector<int> &piles, int k) {
		int sum = 0;
		// 向上取整
		for (int pile : piles) sum += (pile + k - 1) / k;
		return sum;
	}
};
